/******************************************************************************
*
* Copyright (c) 2017, the Perspective Authors.
*
* This file is part of the Perspective library, distributed under the terms of
* the Apache License 2.0.  The full license can be found in the LICENSE file.
*
*/

@import "variables";

:host {
    width: 100%;


    .formula-bar-input-container {
        height: 100%;
        padding: 0 6px;
        overflow: hidden;
        width: auto;
        position: relative;

        .formula-input {
          border: none;
          bottom: 4px;
          line-height: 13px;
          position: absolute;
          top: 4px;
          padding-top: 3px;
          margin: 0;
          outline: none;
          cursor: text;
          width: 100%;
          -webkit-user-modify: read-write-plaintext-only;
          white-space: pre-wrap;
          // background-color: white;
        }

        .psp-expression__column_name {
            font-family: var(--interface--font-family, @sans-serif-fonts);

            // TODO: find a way to just use these styles instead of copying
            // them from the row
            &:before {
                font-family: var(--interface-monospace--font-family, monospace);
                position: relative;
                display: inline-block;
                // display: var(--name-before-display, none);
                padding: var(--column_type--padding, 0px 5px);
                min-width: 18px;
                width: var(--column_type--width, auto);
            }

            &.integer:before,
            &.float:before {
                content: var(
                    --float--column-type--content,
                    var(--column-type--content, "123")
                );
                color: var(
                    --float--column-type--color,
                    var(--column-type--color, #016bc6)
                );
            }

            &.string:before {
                content: var(
                    --string--column-type--content,
                    var(--column-type--content, "abc")
                );
                color: var(
                    --string--column-type--color,
                    var(--column-type--color, #fe9292)
                );
            }

            &.boolean:before {
                content: var(
                    --boolean--column-type--content,
                    var(--column-type--content, "t/f")
                );
                color: var(
                    --boolean--column-type--color,
                    var(--column-type--color, #999999)
                );
            }

            &.date:before {
                content: var(
                    --date--column-type--content,
                    var(--column-type--content, "mdy")
                );
                color: var(
                    --date--column-type--color,
                    var(--column-type--color, #999999)
                );
            }

            &.datetime:before {
                content: var(
                    --datetime--column-type--content,
                    var(--column-type--content, "mdy")
                );
                color: var(
                    --datetime--column-type--color,
                    var(--column-type--color, #999999)
                );
            }
        }

        .psp-expression__function {
            color: var(--expression--function-color, rgb(231, 131, 64));
        }

        .psp-expression__operator {
            color: var(--expression--operator-color, rgb(100, 100, 100));
        }

        .psp-expression__string {
            color: var(--expression--string-color, rgb(30, 169, 64));
        }

        .psp-expression__number {
            color: var(--expression--number-color, rgb(20, 40, 200));
        }

        .psp-expression__suggestion {
            color: lightgray;
            text-decoration: underline;
        }

        .psp-expression__errored {
            font-weight: 700;
            color: var(--expression--error-color, rgb(0, 0, 0));
            text-decoration: underline dotted
                var(--expression--error-color, rgb(250, 51, 51));
        }
    }

    .edit-readonly {
        color: #aaa;
    }
}
